
#quarkus.http.port=8680

quarkus.swagger-ui.always-include=true


quarkus.openshift.env.mapping.SwiftQuarkus_URL.from-configmap=swift-router-cm
quarkus.openshift.env.mapping.SwiftQuarkus_URL.with-key=SwiftQuarkus_URL
#quarkus.openshift.env.mapping.nbmessages.from-configmap=swift-router-cm
#quarkus.openshift.env.mapping.nbmessages.with-key=nbmessages
quarkus.openshift.env.mapping.KAFKA_BOOTSTRAP_SERVERS.from-configmap=swift-router-cm
quarkus.openshift.env.mapping.KAFKA_BOOTSTRAP_SERVERS.with-key=KAFKA_BOOTSTRAP_SERVERS

com.redhat.rest.client.SwiftQuarkusRemoteService/mp-rest/url=${SwiftQuarkus_URL:"http://localhost:8080"}
com.redhat.rest.client.SwiftQuarkusRemoteService/mp-rest/scope=javax.inject.Singleton


#nbmessages=${nbmessages:10}
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}

mp.messaging.outgoing.qCodeRoutage.connector=smallrye-kafka


quarkus.native.container-build=true
quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:20.0.0-java11

quarkus.s2i.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-11
quarkus.s2i.base-native-image=quay.io/quarkus/ubi-quarkus-native-binary-s2i:20.0.0
quarkus.s2i.native-arguments=-Xms8M -Xmx8M -Xmn8M

quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes.deployment-target=openshift

quarkus.openshift.expose=true
quarkus.openshift.labels.app=swift-rest-quarkus-client
quarkus.openshift.labels.app-with-metrics=swift-rest-quarkus-client






